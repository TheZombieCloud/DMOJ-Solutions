import java.util.*;
import java.io.*;
/**
 *
 * @author alexm
 */
public class CircleOfLife3 {

    /**
     * @param args the command line arguments
     */
    public static int [] before;
    public static int [] after;
    public static void recurse(long t){
        if (t==0){
            for (int i = 0;i<before.length;i++){
                System.out.print(before[i]);
            }
            System.exit(0);
        }
        if (t==1){
            for (int i = 0;i<before.length;i++){
                if (i==0){
                    after[i] = before[i+1]^before[before.length-1];
                }
                else if (i==before.length-1){
                    after[i] = before[i-1]^before[0];
                }
                else {
                    after[i] = before[i-1]^before[i+1];
                }
                System.out.print(after[i]);
            }
            System.out.println();
            System.exit(0);
        }
        else {
            long two = 2;
            while (two<=t){
                two *= 2;
            }
            two /= 2;
            t -= two;
            for (int i = 0;i<before.length;i++){
                int temp = (int)(two%before.length);
                int down = i-temp;
                int up = i+temp;
                if (down<0){
                    down = before.length+down;
                }
                if (up>=before.length){
                    up = up - before.length;
                }
                after[i] = before[down]^before[up];
            }
            for (int i = 0;i<before.length;i++){
                before[i] = after[i];
            }
            recurse(t);
        }
    }
    public static void main(String[] args) throws IOException {
        BufferedReader input = new BufferedReader(new InputStreamReader(System.in));
        String [] tokens = input.readLine().split(" ");
        int n2 = Integer.parseInt(tokens[0]);
        long t = Long.parseLong(tokens[1]);
        String n = input.readLine();
        before = new int [n2];
        after = new int[n2];
        for (int i = 0;i<n2;i++){
            before[i] = Integer.parseInt(n.substring(i,i+1));
        }
        recurse(t);
    }
    
}
